name: CI
on: [push]
jobs:
  tests:
    strategy:
      matrix:
        java: [11]
        maven: [3.6.3]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    name: tests on java-${{ matrix.java }}, maven ${{ matrix.maven }} and ${{ matrix.os }} os
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - uses: stCarolas/setup-maven@v3
      with:
        maven-version: ${{ matrix.maven }}
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-java-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-java-
    - run: mvn clean package
  integration-tests:
    strategy:
      matrix:
        java: [11]
        maven: [3.6.3]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: integration tests on java-${{ matrix.java }}, maven ${{ matrix.maven }} and ${{ matrix.os }} os
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - uses: stCarolas/setup-maven@v3
      with:
        maven-version: ${{ matrix.maven }}
    - uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-java-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-java-
    - run: mvn clean package
    - run: sudo apt install -y curl jq
    - run: command -v docker >/dev/null 2>&1 || { echo >&2 "I require docker but it's not installed.  Aborting."; exit 1; }
    - run: docker run --rm -d -p 8080:8080 -v `pwd`/`ls target/*jar`:/app.jar:ro openjdk:11.0.7-jdk-slim-buster java -jar /app.jar
    - run: while [[ ! 200 -eq `curl -s -o /dev/null -w "%{http_code}" 0:8080/actuator/health` ]] ; do sleep 1s ; echo -n '.' ; done
    - run: curl -sS 0:8080/api/hello | jq '.'

